I = imread('Fig10.34_airport.tif');
BW = edge(I,'canny');


%%
%[H,theta,rho] = hough(BW) computes the Standard Hough Transform (SHT) of the binary image BW. 
%The hough function is designed to detect lines. 
%The function uses the parametric representation of a line: rho = x*cos(theta) + y*sin(theta). 
%The function returns rho, the distance from the origin to the line along a vector perpendicular to the line, and theta, the angle in degrees between the x-axis and this vector. 
%The function also returns the Standard Hough Transform, H, which is a parameter space matrix whose rows and columns correspond to rho and theta values respectively.

[H,T,R] = hough(BW);
imshow(H,[],'XData',T,'YData',R,...
            'InitialMagnification','fit');
xlabel('\theta'), ylabel('\rho');
axis on, axis normal, hold on;

%%
%peaks = houghpeaks(H,numpeaks) locates peaks in the Hough transform matrix, H, 
%generated by the hough function. numpeaks specifies the maximum number of peaks to identify. 
%The function returns peaks a matrix that holds the row and column coordinates of the peaks.
P  = houghpeaks(H,2);
x = T(P(:,2)); y = R(P(:,1));
plot(x,y,'s','color','white');
%%
%houghlines(BW,theta,rho,peaks) extracts line segments in the image BW associated with particular bins in a Hough transform.
%theta and rho are vectors returned by function hough.
%peaks is a matrix returned by the houghpeaks function that contains the row and column coordinates of the Hough transform bins to use in searching for line segments.
%'FillGap' ¡ª Distance between two line segments associated with the same Hough transform bin 20 (default) | positive real scalar
%'MinLength' ¡ª Minimum line length 40 (default) | positive real scalar
%The return value lines is a structure array whose length equals the number of merged line segments found.
lines = houghlines(BW,T,R,P,'FillGap',40);

figure, imshow(I), hold on
max_len = 0;
for k = 1:length(lines)
   xy = [lines(k).point1; lines(k).point2];
   plot(xy(:,1),xy(:,2),'LineWidth',2,'Color','green');

   % Plot beginnings and ends of lines
   plot(xy(1,1),xy(1,2),'x','LineWidth',2,'Color','yellow');
   plot(xy(2,1),xy(2,2),'x','LineWidth',2,'Color','red');

  
end
%%
